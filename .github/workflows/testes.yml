name: dotnet5-tests-api-acr-aks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGEM_AZURECR: ${{ secrets.AZURECR_REGISTRY }}/apifinancas-dotnet5
  CAMINHO_PROJETO_TESTES: ./APIFinancas.Especificacoes
  CAMINHO_PROJETO_WEBAPP: ./APIFinancas

jobs:
  build-docker-tests-push-acr:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 5.0.103

    - name: Build de imagem
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.IMAGEM_AZURECR }}:latest

    - name: Criação de container para testes com a API
      run: |
        docker run --name api-testes -p 1234:80 -d ${{ env.IMAGEM_AZURECR }}:latest
        docker container ls
        
    - name: Testes com .NET 5 + SpecFlow + xUnit + Refit
      env:
        UrlWebAppTestes: http://localhost:1234
      run: dotnet test ${{ env.CAMINHO_PROJETO_TESTES }} --verbosity minimal --logger:"html;LogFileName=resultado-testes.html"
      
    - name: Login no Azure Container Registry
      uses: docker/login-action@v1.8.0
      with:
        registry: ${{ secrets.AZURECR_REGISTRY }}
        username: ${{ secrets.AZURECR_USERNAME }}
        password: ${{ secrets.AZURECR_PASSWORD }}

    - name: Geração de tag com número do Build e Push no Azure Container Registry
      run: |
        docker tag ${{ env.IMAGEM_AZURECR }}:latest ${{ env.IMAGEM_AZURECR }}:$GITHUB_RUN_NUMBER
        docker push --all-tags ${{ env.IMAGEM_AZURECR }}

    - name: Upload do Report de Testes com Falhas como Artifact
      uses: actions/upload-artifact@v2.2.2
      if: always()
      env:
        CAMINHO_RELATORIO_TESTES: ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults/resultado-testes.html
      with:
        name: resultado-execucao-testes
        path: ${{ env.CAMINHO_RELATORIO_TESTES }}
        retention-days: 30
